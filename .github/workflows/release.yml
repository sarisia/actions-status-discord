name: "release"
on:
  release:
    types:
      - published
      - edited

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: build
        uses: devcontainers/ci@3dcee0e5dada9275fbd8e4d76ee9de43998be886
        with:
          imageName: ghcr.io/${{ github.repository }}/devcontainer
          cacheFrom: ghcr.io/${{ github.repository }}/devcontainer
          push: never
          runCmd: |
            npm ci
            npm run build

      - name: Build and Tag
        # temporary use own fork until 
        # uses: JasonEtco/build-and-tag-action@v2
        uses: sarisia/build-and-tag-action@86c2f7fbe7691ec3529884d45038295c0aa3ce35
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          commit_message: |
            Automatic build
            Commit ${{ github.sha }}
            Run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Update source tag
        shell: bash
        run: |
          TAGNAME=${{ github.ref_name }}-src
          git tag $TAGNAME ${{ github.sha }}
          git push origin $TAGNAME

      - name: report result
        uses: sarisia/actions-status-discord@9d12cc6d7c8d55f9cbe5efa643117f8c7423f4cf
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  e2e-all-os:
    needs: release
    strategy:
      max-parallel: 2 # to avoid discord webhook's rate limit
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-22.04
          - ubuntu-20.04
          - windows-latest
          - windows-2022
          - windows-2019
          - macos-latest
          - macos-12
          - macos-11
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          ref: ${{ github.ref_name }}
          
      - uses: ./
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: Success
          title: "e2e - ${{ github.ref_name }} - ${{ matrix.os }}"
          description: |
            Tag: `${{ github.ref_name }}`
            Build atrifact SHA: `${{ github.sha }}`
          nofail: false
          nodetail: false
          image: "https://user-images.githubusercontent.com/33576079/81886735-69e03f80-95d8-11ea-8828-fa10dda8afd1.png"
          color: 0xFFFFFF
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}

  conclude:
    runs-on: ubuntu-latest
    needs: e2e-all-os
    if: always()
    permissions:
      actions: read
    steps:
      - uses: sarisia/actions/conclusion@main
        id: ghapi
        
      - uses: sarisia/actions-status-discord@9d12cc6d7c8d55f9cbe5efa643117f8c7423f4cf
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ steps.ghapi.outputs.conclusion }}
          title: ${{ github.workflow }} - conclusion
