name: "release"
on:
  release:
    types:
      - published
      - edited

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: build
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6
        with:
          imageName: ghcr.io/${{ github.repository }}/devcontainer
          cacheFrom: ghcr.io/${{ github.repository }}/devcontainer
          push: never
          runCmd: |
            npm ci
            npm run build

      - name: generate artifact attestation for action.yml
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-path: action.yml

      - name: generate artifact attestation for lib/index.js
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-path: lib/index.js

      - name: Build and Tag
        # temporary use own fork until
        # uses: JasonEtco/build-and-tag-action@v2
        uses: sarisia/build-and-tag-action@86c2f7fbe7691ec3529884d45038295c0aa3ce35
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          commit_message: |
            Automatic build
            Commit ${{ github.sha }}
            Run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Update source tag
        shell: bash
        run: |
          TAGNAME=${{ github.ref_name }}-src
          git tag $TAGNAME ${{ github.sha }}
          git push origin $TAGNAME

      - name: report result
        uses: sarisia/actions-status-discord@5ddd3b114a98457dd80a39b2f00b6a998cd69008
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  e2e-all-os:
    needs: release
    strategy:
      max-parallel: 2 # to avoid discord webhook's rate limit
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04
          - windows-latest
          - windows-2025
          - windows-2022
          - windows-2019
          - ubuntu-24.04-arm
          - ubuntu-22.04-arm
          - macos-latest
          - macos-15
          - macos-14
          - macos-13
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: ${{ github.ref_name }}

      - uses: ./
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: Success
          content: "hey <@316911818725392384>"
          title: "e2e - ${{ github.ref_name }} - ${{ matrix.os }}"
          description: |
            Tag: `${{ github.ref_name }}`
            Build atrifact SHA: `${{ github.sha }}`
          nofail: false
          nodetail: false
          image: "https://user-images.githubusercontent.com/33576079/81886735-69e03f80-95d8-11ea-8828-fa10dda8afd1.png"
          color: 0xFFFFFF
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}

  conclude:
    runs-on: ubuntu-latest
    needs: e2e-all-os
    if: always()
    permissions:
      actions: read
    steps:
      - uses: sarisia/actions/conclusion@main
        id: ghapi

      - uses: sarisia/actions-status-discord@5ddd3b114a98457dd80a39b2f00b6a998cd69008
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ steps.ghapi.outputs.conclusion }}
          title: ${{ github.workflow }} - conclusion
